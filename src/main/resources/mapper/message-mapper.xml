<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yc.community.dao.MessageMapper">
    <sql id="selectField">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <sql id="insertField">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <insert id="insertMessage" useGeneratedKeys="true" keyProperty="id">
        insert into message(<include refid="insertField"/>)
        values(#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>
    <update id="updateStatus">
        update message
        set status = #{status}
        where id in
        <foreach collection="ids" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </update>

    <select id="selectConversations" resultType="com.yc.community.entity.Message">
        select <include refid="selectField"/>
        from message
        where id in (
            select max(id)
            from message
            where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where id in (
            select max(id)
            from message
            where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        )
    </select>

    <select id="selectLetters" resultType="com.yc.community.entity.Message">
        select <include refid="selectField"/>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLetterCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status !=2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId != null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <select id="selectNotices" resultType="com.yc.community.entity.Message">
        select <include refid="selectField"/>
        from message
        where to_id = #{id}
        and from_id = 1
        and status != 2
        and conversation_id = #{topic}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLatestNotice" resultType="com.yc.community.entity.Message">
        select <include refid="selectField"/>
        from message
        where id =
        (
            select max(id) from message
            where status != 2
            and from_id = 1
            and to_id = #{id}
            and conversation_id = #{topic}
        )
    </select>

    <select id="selectNoticeCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2
        and from_id = 1
        and to_id = #{id}
        and conversation_id = #{topic}
    </select>

    <select id="selectNoticeUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0
        and from_id = 1
        and to_id = #{id}
        <if test="topic != null">
            and conversation_id = #{topic}
        </if>
    </select>
</mapper>